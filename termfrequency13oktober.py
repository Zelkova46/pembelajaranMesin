# -*- coding: utf-8 -*-
"""termFrequency13oktober.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fpPXlIdGYuJ8tUannS71_O6DzmWXG4ob

# Menhitung TERM FREQUENCY (TF)

Nama : Muhammad Imam Ariq Sya'bana

NIM  : 20106050041
"""

doc1 = "Saya sedang belajar menghitung tf idf."
doc2 = "Tf.idf merupakan frekuensi kemunculan term pada dokumen."
doc3 = "Langkah awal perhitungan tersebut adalah menghitung tf, kemudian menghitung df dan idf."
doc4 = "Langkah terakhir menghitung nilai tf.idf."
doc5 = "Mari kita belajar!"

doc1Lower = doc1.lower()
doc2Lower = doc2.lower()
doc3Lower = doc3.lower()
doc4Lower = doc4.lower()
doc5Lower = doc5.lower()

doc = []
doc.append(doc1Lower)
doc.append(doc2Lower)
doc.append(doc3Lower)
doc.append(doc4Lower)
doc.append(doc5Lower)
print(doc)

import math # untuk melakukan logaritma
from tabulate import tabulate # untuk membuat tabel

akhir = "akhir"
awal = "awal"
belajar = "belajar"
dokumen = "dokumen"
frekuensi = "frekuensi"
hitung = "hitung"
idf = "idf"
kita = "kita"
langkah = "langkah"
muncul = "muncul"
saya = "saya"
term = "term"
tf = "tf"

print("TERM FREQUENCY (tf) D1 - D5")
countAkhir = []

for x in range(len(doc)):
    d = doc[x].count(akhir)
    countAkhir.append(d)
    x += 1

print("akhir", countAkhir, "\n")

dfAkhir = 0
for i in range(len(countAkhir)):
  if countAkhir[i] != 0:
    dfAkhir += 1
    i += 1

print("df untuk kata akhir : ", dfAkhir, "\n")

idfAkhir5 = math.log10(5/dfAkhir)
print("Karena dokumen ada 5, hitung idf 'Akhir' dengan N = 5 : " , idfAkhir5, "\n")

idfAkhir1000 = math.log10(1000/dfAkhir)
print("misal perhitungan idf dengan N = 1000 : " , idfAkhir1000,"\n")

bobotAkhir = []
for j in range(len(countAkhir)):
  wAkhir = countAkhir[j] * idfAkhir5
  bobotAkhir.append(wAkhir)

print("Ini adalah bobot kata 'akhir' di tiap tiap dokumen (D1 - D5) berurutan :")
print(bobotAkhir)

print("TERM FREQUENCY D1 - D5")
countAwal = []

for x in range(len(doc)):
    d = doc[x].count(awal)
    countAwal.append(d)
    x += 1

print("awal", countAwal, "\n")


dfAwal = 0
for i in range(len(countAwal)):
  if countAwal[i] != 0:
    dfAwal += 1
    i += 1

print("df untuk kata awal : ", dfAwal, "\n")

idfAwal5 = math.log10(5/dfAwal)
print("Karena dokumen ada 5, hitung idf 'awal' dengan N = 5 : " , idfAwal5, "\n")

idfAwal1000 = math.log10(1000/dfAwal)
print("misal perhitungan idf dengan N = 1000 : " ,idfAwal1000,"\n")

bobotAwal = []
for j in range(len(countAwal)):
  wAwal = countAwal[j] * idfAwal5
  bobotAwal.append(wAwal)

print("Ini adalah bobot kata 'awal' di tiap tiap dokumen (D1 - D5) berurutan :")
print(bobotAwal)

print("TERM FREQUENCY D1 - D5")
countBelajar = []

for x in range(len(doc)):
    d = doc[x].count(belajar)
    countBelajar.append(d)
    x += 1

print("belajar", countBelajar)


dfBelajar = 0
for i in range(len(countBelajar)):
  if countBelajar[i] != 0:
    dfBelajar += 1
    i =+ 1

print("df untuk kata belajar  : ", dfBelajar, "\n")

idfBelajar5 = math.log10(5/dfBelajar)
print("Karena dokumen ada 5, hitung idf 'belajar' dengan N = 5 : " , idfBelajar5, "\n")

idfBelajar1000 = math.log10(1000/dfBelajar)
print("misal perhitungan idf dengan N = 1000 : " , idfBelajar1000,"\n")

bobotBelajar = []
for j in range(len(countBelajar)):
  wBelajar = countBelajar[j] * idfBelajar5
  bobotBelajar.append(wBelajar)

print("Ini adalah bobot kata 'belajar' di tiap tiap dokumen (D1 - D5) berurutan :")
print(bobotBelajar)

print("TERM FREQUENCY D1 - D5")
countDokumen = []

for x in range(len(doc)):
    d = doc[x].count(dokumen)
    countDokumen.append(d)
    x += 1

print("Dokumen", countDokumen)


dfDokumen = 0
for i in range(len(countDokumen)):
  if countDokumen[i] != 0:
    dfDokumen += 1
    i =+ 1

print("df untuk kata Dokumen  : ", dfDokumen, "\n")

idfDokumen5 = math.log10(5/dfDokumen)
print("Karena dokumen ada 5, hitung idf 'dokumen' dengan N = 5 : " , idfDokumen5, "\n")

idfDokumen1000 = math.log10(1000/dfDokumen)
print("misal perhitungan idf dengan N = 1000 : " ,idfDokumen1000,"\n")

bobotDokumen = []
for j in range(len(countDokumen)):
  wDokumen = countDokumen[j] * idfDokumen5
  bobotDokumen.append(wDokumen)

print("Ini adalah bobot kata 'dokumen' di tiap tiap dokumen (D1 - D5) berurutan :")
print(bobotDokumen)

print("TERM FREQUENCY D1 - D5")
countFrekuensi = []

for x in range(len(doc)):
    d = doc[x].count(frekuensi)
    countFrekuensi.append(d)
    x += 1

print("Frekuensi", countFrekuensi)


dfFrekuensi = 0
for i in range(len(countFrekuensi)):
  if countFrekuensi[i] != 0:
    dfFrekuensi += 1
    i =+ 1

print("df untuk kata Frekuensi  : ", dfFrekuensi, "\n")

idfFrekuensi5 = math.log10(5/dfFrekuensi)
print("Karena dokumen ada 5, hitung idf 'frekuensi' dengan N = 5 : " , idfFrekuensi5, "\n")

idfFrekuensi1000 = math.log10(1000/dfFrekuensi)
print("misal perhitungan idf dengan N = 1000 : " , idfFrekuensi5,"\n")

bobotFrekuensi = []
for j in range(len(countFrekuensi)):
  wFrekuensi = countFrekuensi[j] * idfFrekuensi5
  bobotFrekuensi.append(wFrekuensi)

print("Ini adalah bobot kata 'frekuensi' di tiap tiap dokumen (D1 - D5) berurutan :")
print(bobotFrekuensi)

print("TERM FREQUENCY D1 - D5")
countHitung = []

for x in range(len(doc)):
    d = doc[x].count(hitung)
    countHitung.append(d)
    x += 1

print("Hitung", countHitung)


dfHitung = 0
for i in range(len(countHitung)):
  if countHitung[i] != 0:
    dfHitung += 1
    i =+ 1

print("df untuk kata Hitung  : ", dfHitung, "\n")

idfHitung5 = math.log10(5/dfHitung)
print("Karena dokumen ada 5, hitung idf 'hitung' dengan N = 5 : " , idfHitung5, "\n")

idfHitung1000 = math.log10(1000/dfHitung)
print("misal perhitungan idf dengan N = 1000 : " , idfHitung1000,"\n")

bobotHitung = []
for j in range(len(countHitung)):
  wHitung = countHitung[j] * idfHitung5
  bobotHitung.append(wHitung)

print("Ini adalah bobot kata 'Hitung' di tiap tiap dokumen (D1 - D5) berurutan :")
print(bobotHitung)

print("TERM FREQUENCY D1 - D5")
countIdf = []

for x in range(len(doc)):
    d = doc[x].count(idf)
    countIdf.append(d)
    x += 1

print("Idf", countIdf)


dfIdf = 0
for i in range(len(countIdf)):
  if countIdf[i] != 0:
    dfIdf += 1
    i =+ 1

print("df untuk kata Idf  : ", dfIdf, "\n")

idfIdf5 = math.log10(5/dfIdf)
print("Karena dokumen ada 5, hitung idf 'Idf' dengan N = 5 : " , idfIdf5, "\n")

idfIdf1000 = math.log10(1000/dfIdf)
print("misal perhitungan idf dengan N = 1000 : " , idfIdf1000,"\n")

bobotIdf = []
for j in range(len(countIdf)):
  wIdf = countIdf[j] * idfIdf5
  bobotIdf.append(wIdf)

print("Ini adalah bobot kata 'Idf' di tiap tiap dokumen (D1 - D5) berurutan :")
print(bobotIdf)

print("TERM FREQUENCY D1 - D5")
countKita = []

for x in range(len(doc)):
    d = doc[x].count(kita)
    countKita.append(d)
    x += 1

print("Kita", countKita)



dfKita = 0
for i in range(len(countKita)):
  if countKita[i] != 0:
    dfKita += 1
    i =+ 1

print("df untuk kata Kita  : ", dfKita, "\n")

idfKita5 = math.log10(5/dfKita)
print("Karena dokumen ada 5, hitung idf 'awal' dengan N = 5 : " , idfKita5, "\n")

idfKita1000 = math.log10(1000/dfKita)
print("misal perhitungan idf dengan N = 1000 : " , idfKita1000,"\n")

bobotKita = []
for j in range(len(countKita)):
  wKita = countKita[j] * idfKita5
  bobotKita.append(wKita)

print("Ini adalah bobot kata 'Kita' di tiap tiap dokumen (D1 - D5) berurutan :")
print(bobotKita)

print("TERM FREQUENCY D1 - D5")
countLangkah = []

for x in range(len(doc)):
    d = doc[x].count(langkah)
    countLangkah.append(d)
    x += 1

print("Langkah", countLangkah)



dfLangkah = 0
for i in range(len(countLangkah)):
  if countLangkah[i] != 0:
    dfLangkah += 1
    i =+ 1

print("df untuk kata Langkah  : ", dfLangkah, "\n")

idfLangkah5 = math.log10(5/dfLangkah)
print("Karena dokumen ada 5, hitung idf 'awal' dengan N = 5 : " , idfLangkah5, "\n")

idfLangkah1000 = math.log10(1000/dfLangkah)
print("misal perhitungan idf dengan N = 1000 : " , idfLangkah1000,"\n")

bobotLangkah = []
for j in range(len(countLangkah)):
  wLangkah = countLangkah[j] * idfLangkah5
  bobotLangkah.append(wLangkah)

print("Ini adalah bobot kata 'Langkah' di tiap tiap dokumen (D1 - D5) berurutan :")
print(bobotLangkah)

print("TERM FREQUENCY D1 - D5")
countMuncul = []

for x in range(len(doc)):
    d = doc[x].count(muncul)
    countMuncul.append(d)
    x += 1

print("Muncul", countMuncul)



dfMuncul = 0
for i in range(len(countMuncul)):
  if countMuncul[i] != 0:
    dfMuncul += 1
    i =+ 1

print("df untuk kata Muncul  : ", dfMuncul, "\n")

idfMuncul5 = math.log10(5/dfMuncul)
print("Karena dokumen ada 5, hitung idf 'awal' dengan N = 5 : " , idfMuncul5, "\n")

idfMuncul1000 = math.log10(1000/dfMuncul)
print("misal perhitungan idf dengan N = 1000 : " , idfMuncul1000,"\n")

bobotMuncul = []
for j in range(len(countMuncul)):
  wMuncul = countMuncul[j] * idfMuncul5
  bobotMuncul.append(wMuncul)

print("Ini adalah bobot kata 'Muncul' di tiap tiap dokumen (D1 - D5) berurutan :")
print(bobotMuncul)

print("TERM FREQUENCY D1 - D5")
countSaya = []

for x in range(len(doc)):
    d = doc[x].count(saya)
    countSaya.append(d)
    x += 1

print("Saya", countSaya)



dfSaya = 0
for i in range(len(countSaya)):
  if countSaya[i] != 0:
    dfSaya += 1
    i =+ 1

print("df untuk kata Saya  : ", dfSaya, "\n")

idfSaya5 = math.log10(5/dfSaya)
print("Karena dokumen ada 5, hitung idf 'awal' dengan N = 5 : " , idfSaya5, "\n")

idfSaya1000 =  math.log10(1000/dfSaya)
print("misal perhitungan idf dengan N = 1000 : " , idfSaya1000,"\n")

bobotSaya = []
for j in range(len(countSaya)):
  wSaya = countSaya[j] * idfSaya5
  bobotSaya.append(wSaya)

print("Ini adalah bobot kata 'Saya' di tiap tiap dokumen (D1 - D5) berurutan :")
print(bobotSaya)

print("TERM FREQUENCY D1 - D5")
countTerm = []

for x in range(len(doc)):
    d = doc[x].count(term)
    countTerm.append(d)
    x += 1

print("Term", countTerm)


dfTerm = 0
for i in range(len(countTerm)):
  if countTerm[i] != 0:
    dfTerm += 1
    i =+ 1

print("df untuk kata Term  : ", dfTerm, "\n")

idfTerm5 = math.log10(5/dfTerm)
print("Karena dokumen ada 5, hitung idf 'awal' dengan N = 5 : " , idfTerm5, "\n")

idfTerm1000 = math.log10(1000/dfTerm)
print("misal perhitungan idf dengan N = 1000 : " , idfTerm1000,"\n")

bobotTerm = []
for j in range(len(countTerm)):
  wTerm = countTerm[j] * idfTerm5
  bobotTerm.append(wTerm)

print("Ini adalah bobot kata 'Term' di tiap tiap dokumen (D1 - D5) berurutan :")
print(bobotTerm)

print("TERM FREQUENCY D1 - D5")
countTf = []

for x in range(len(doc)):
    d = doc[x].count(tf)
    countTf.append(d)
    x += 1

print("Tf", countTf)



dfTf = 0
for i in range(len(countTf)):
  if countTf[i] != 0:
    dfTf += 1
    i =+ 1

print("df untuk kata Tf  : ", dfTf, "\n")

idfTf5 = math.log10(5/dfTf)
print("Karena dokumen ada 5, hitung idf 'awal' dengan N = 5 : " , idfTf5, "\n")

idfTf1000 =math.log10(1000/dfTf)
print("misal perhitungan idf dengan N = 1000 : " , idfTf1000,"\n")

bobotTf = []
for j in range(len(countTf)):
  wTf = countTf[j] * idfTf5
  bobotTf.append(wTf)

print("Ini adalah bobot kata 'Tf' di tiap tiap dokumen (D1 - D5) berurutan :")
print(bobotTf)

table = [['Term (t)', 'D1', 'D2', 'D3', 'D4', 'D5', 'df','idf dengan N =5', 'idf dengan N = 1000','bobot D1', 'bobot D2', 'bobot D3', 'bobot D4', 'bobot D5'], 
         [akhir, countAkhir[0], countAkhir[1], countAkhir[2], countAkhir[3], countAkhir[4], dfAkhir, idfAkhir5, idfAkhir1000, bobotAkhir[0], bobotAkhir[1], bobotAkhir[2], bobotAkhir[3], bobotAkhir[4]],
         [awal, countAwal[0], countAwal[1], countAwal[2], countAwal[3], countAwal[4], dfAwal, idfAwal5, idfAwal1000, bobotAwal[0], bobotAwal[1], bobotAwal[2], bobotAwal[3], bobotAwal[4]],
         [belajar, countBelajar[0], countBelajar[1], countBelajar[2], countBelajar[3], countBelajar[4], dfBelajar, idfBelajar5, idfBelajar1000, bobotBelajar[0], bobotBelajar[1], bobotBelajar[2], bobotBelajar[3], bobotBelajar[4]],
         [dokumen, countDokumen[0], countDokumen[1], countDokumen[2], countDokumen[3], countDokumen[4], dfDokumen, idfDokumen5, idfDokumen1000, bobotDokumen[0], bobotDokumen[1], bobotDokumen[2], bobotDokumen[3], bobotDokumen[4]],
         [frekuensi, countFrekuensi[0], countFrekuensi[1], countFrekuensi[2], countFrekuensi[3], countFrekuensi[4], dfFrekuensi, idfFrekuensi5, idfFrekuensi1000, bobotFrekuensi[0], bobotFrekuensi[1], bobotFrekuensi[2], bobotFrekuensi[3], bobotFrekuensi[4]],
         [hitung, countHitung[0], countHitung[1], countHitung[2], countHitung[3], countHitung[4], dfHitung, idfHitung5, idfHitung1000, bobotHitung[0], bobotHitung[1], bobotHitung[2], bobotHitung[3], bobotHitung[4]],
         [idf, countIdf[0], countIdf[1], countIdf[2], countIdf[3], countIdf[4], dfIdf, idfIdf5, idfIdf1000, bobotIdf[0], bobotIdf[1], bobotIdf[2], bobotIdf[3], bobotIdf[4]],
         [kita, countKita[0], countKita[1], countKita[2], countKita[3], countKita[4], dfKita, idfKita5, idfKita1000, bobotKita[0], bobotKita[1], bobotKita[2], bobotKita[3], bobotKita[4]],
         [langkah, countLangkah[0], countLangkah[1], countLangkah[2], countLangkah[3], countLangkah[4], dfLangkah, idfLangkah5, idfLangkah1000, bobotLangkah[0], bobotLangkah[1], bobotLangkah[2], bobotLangkah[3], bobotLangkah[4]],
         [muncul, countMuncul[0], countMuncul[1], countMuncul[2], countMuncul[3], countMuncul[4], dfMuncul, idfMuncul5, idfMuncul1000, bobotMuncul[0], bobotMuncul[1], bobotMuncul[2], bobotMuncul[3], bobotMuncul[4]],
         [saya, countSaya[0], countSaya[1], countSaya[2], countSaya[3], countSaya[4], dfSaya, idfSaya5, idfSaya1000, bobotSaya[0], bobotSaya[1], bobotSaya[2], bobotSaya[3], bobotSaya[4]],
         [term, countTerm[0], countTerm[1], countTerm[2], countTerm[3], countTerm[4], dfTerm, idfTerm5, idfTerm1000, bobotTerm[0], bobotTerm[1], bobotTerm[2], bobotTerm[3], bobotTerm[4]],
         [tf, countTf[0], countTf[1], countTf[2], countTf[3], countTf[4], dfTf, idfTf5, idfTf1000, bobotTf[0], bobotTf[1], bobotTf[2], bobotTf[3], bobotTf[4]],
         
         ]

print(tabulate(table))

